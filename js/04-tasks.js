/**
 * –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é logItems(items), —è–∫–∞ –æ—Ç—Ä–∏–º—É—î –º–∞—Å–∏–≤ —Ç–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î —Ü–∏–∫–ª,
 * —è–∫–∏–π –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å–∏–≤—É –±—É–¥–µ –≤–∏–≤–æ–¥–∏—Ç–∏ –≤ –∫–æ–Ω—Å–æ–ª—å –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —É
 * —Ñ–æ—Ä–º–∞—Ç—ñ <–Ω–æ–º–µ—Ä –µ–ª–µ–º–µ–Ω—Ç–∞> - <–∑–Ω–∞—á–µ–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç–∞>. –ù—É–º–µ—Ä–∞—Ü—ñ—è –µ–ª–µ–º–µ–Ω—Ç—ñ–≤
 * –ø–æ–≤–∏–Ω–Ω–∞ –ø–æ—á–∏–Ω–∞—Ç–∏—Å—è –∑ 1.
 *
 * –ù–∞–ø—Ä–∏–∫–ª–∞–¥ –¥–ª—è –ø–µ—Ä—à–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å–∏–≤—É ['Mango', 'Poly', 'Ajax'] –∑
 * —ñ–Ω–¥–µ–∫—Å–æ–º 0 –±—É–¥–µ –≤–∏–≤–µ–¥–µ–Ω–æ 1 - Mango, –∞ –¥–ª—è —ñ–Ω–¥–µ–∫—Å—É 2 –≤–∏–≤–µ–¥–µ 3 - Ajax.
 */

function logItems(items) {
  // i = 1;
  for (let i = 0; i < items.length; i += 1) {
    console.log(i + 1, items[i]);
  }
}

// logItems(["Mango", "Poly", "Ajax"]);

// logItems(["üçé", "üçá", "üçë", "üçå", "üçã"]);

/**
 * –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é printInfo(names, phones) —è–∫–∞ –≤–∏–≤–æ–¥–∏—Ç—å
 * —É –∫–æ–Ω—Å–æ–ª—å —ñ–º'—è —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω–∏–π –Ω–æ–º–µ—Ä –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞. –£ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏
 * names —Ç–∞ phones –±—É–¥—É—Ç—å –ø–µ—Ä–µ–¥–∞–Ω—ñ —Ä—è–¥–∫–∏ —ñ–º–µ–Ω —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω–∏—Ö –Ω–æ–º–µ—Ä—ñ–≤,
 * —Ä–æ–∑–¥—ñ–ª–µ–Ω—ñ –∫–æ–º–∞–º–∏. –ü–æ—Ä—è–¥–∫–æ–≤–∏–π –Ω–æ–º–µ—Ä —ñ–º–µ–Ω —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω—ñ–≤ —É —Ä—è–¥–∫–∞—Ö
 * –≤–∫–∞–∑—É—é—Ç—å –Ω–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—ñ—Å—Ç—å. –ö—ñ–ª—å–∫—ñ—Å—Ç—å —ñ–º–µ–Ω —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω—ñ–≤
 * –≥–∞—Ä–∞–Ω—Ç–æ–≤–∞–Ω–æ –æ–¥–Ω–∞–∫–æ–≤–∞.
 */

// function printInfo(names, phones) {
//   names = names.split(",");
//   phones = phones.split(",");

//   for (let i = 0; i < names.length; i += 1) {
//     console.log(names[i], phones[i]);
//   }
// }

// printInfo(
//   "Jacob,William,Solomon,Artemis",
//   "89001234567,89001112233,890055566377,890055566300"
// );

/**
 * –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é formatTime(minutes) —è–∫–∞ –ø–µ—Ä–µ–≤–µ–¥–µ –∑–Ω–∞—á–µ–Ω–Ω—è
 * minutes (–∫—ñ–ª—å–∫—ñ—Å—Ç—å —Ö–≤–∏–ª–∏–Ω) —É —Ä—è–¥–æ–∫ —É —Ñ–æ—Ä–º–∞—Ç—ñ –≥–æ–¥–∏–Ω
 * —Ç–∞ —Ö–≤–∏–ª–∏–Ω HH:MM.
 */

// function formatTime(minutes) {
//   const hours = Math.floor(minutes / 60) + "";
//   minutes = (minutes % 60) + "";
//   return `${hours.padStart(2, "0")}:${minutes.padStart(2, "0")}`;
// }

// console.log(formatTime(70)); // "01:10"
// console.log(formatTime(450)); // "07:30"
// console.log(formatTime(1441)); // "24:01"

// let str = "help me";
// const result = str.padEnd(10, " ");
// console.log(result);

// ============================

/* 
–ó–∞–¥–∞—á–∞ –Ω–∞ –∑–Ω–∞—Ö–æ–¥–∂–µ–Ω–Ω—è —Å—É–º–∏: –ù–∞–ø–∏—à—ñ—Ç—å —Ñ—É–Ω–∫—Ü—ñ—é calculateSum, —è–∫–∞ –ø—Ä–∏–π–º–∞—î –¥–≤–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏, a —Ç–∞ b. –§—É–Ω–∫—Ü—ñ—è –ø–æ–≤–∏–Ω–Ω–∞ –ø–æ–≤–µ—Ä—Ç–∞—Ç–∏ —Å—É–º—É —Ü–∏—Ö –¥–≤–æ—Ö —á–∏—Å–µ–ª.
*/
/* 
function calculateSum(a, b) {
  return a + b;
}
const result = calculateSum(10, 20);
console.log(result); */

// ============================

/* –ó–∞–¥–∞—á–∞ –Ω–∞ –∑–Ω–∞—Ö–æ–¥–∂–µ–Ω–Ω—è —Å–µ—Ä–µ–¥–Ω—å–æ–≥–æ –∑–Ω–∞—á–µ–Ω–Ω—è: –ù–∞–ø–∏—à—ñ—Ç—å —Ñ—É–Ω–∫—Ü—ñ—é calculateAverage, —è–∫–∞ –ø—Ä–∏–π–º–∞—î —Ç—Ä–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ - —á–∏—Å–ª–∞ a, b —Ç–∞ c. –§—É–Ω–∫—Ü—ñ—è –ø–æ–≤–∏–Ω–Ω–∞ –ø–æ–≤–µ—Ä—Ç–∞—Ç–∏ —Å–µ—Ä–µ–¥–Ω—î –∑–Ω–∞—á–µ–Ω–Ω—è —Ü–∏—Ö —Ç—Ä—å–æ—Ö —á–∏—Å–µ–ª. */
/* 
function calculateAverage() {
  let total = 0;

  for (let item of arguments) {
    total += item;
  }

  return total / arguments.length;
}

const result = calculateAverage(10, 20, 3, 5);
console.log(result); */

// ============================

/* –ó–∞–¥–∞—á–∞ –Ω–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫—É –ø–∞—Ä–Ω–æ—Å—Ç—ñ: –ù–∞–ø–∏—à—ñ—Ç—å —Ñ—É–Ω–∫—Ü—ñ—é isNumberEven, —è–∫–∞ –ø—Ä–∏–π–º–∞—î –æ–¥–∏–Ω –ø–∞—Ä–∞–º–µ—Ç—Ä - —á–∏—Å–ª–æ. –§—É–Ω–∫—Ü—ñ—è –ø–æ–≤–∏–Ω–Ω–∞ –ø–æ–≤–µ—Ä—Ç–∞—Ç–∏ true, —è–∫—â–æ —á–∏—Å–ª–æ –ø–∞—Ä–Ω–µ, —Ç–∞ false, —è–∫—â–æ –Ω–µ–ø–∞—Ä–Ω–µ. */

// function isNumberEven(x) {
//   return x % 2 === 0;
// }

// console.log(isNumberEven(2));
// console.log(isNumberEven(3));
// console.log(isNumberEven(4));
// console.log(isNumberEven(5));
// ============================

/* –ó–∞–¥–∞—á–∞ –Ω–∞ –æ–±'—î–¥–Ω–∞–Ω–Ω—è —Ä—è–¥–∫—ñ–≤: –ù–∞–ø–∏—à—ñ—Ç—å —Ñ—É–Ω–∫—Ü—ñ—é concatenateStrings, —è–∫–∞ –ø—Ä–∏–π–º–∞—î —Ç—Ä–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ - —Ä—è–¥–∫–∏ str1, str2 —Ç–∞ str3. –§—É–Ω–∫—Ü—ñ—è –ø–æ–≤–∏–Ω–Ω–∞ –æ–±'—î–¥–Ω–∞—Ç–∏ —Ü—ñ —Ä—è–¥–∫–∏ –≤ –æ–¥–∏–Ω –Ω–æ–≤–∏–π —Ä—è–¥–æ–∫ —ñ –ø–æ–≤–µ—Ä–Ω—É—Ç–∏ –π–æ–≥–æ. */

// ============================

/* –ó–∞–¥–∞—á–∞ –Ω–∞ –∑–Ω–∞—Ö–æ–¥–∂–µ–Ω–Ω—è –∑–∞–ª–∏—à–∫—É –≤—ñ–¥ –¥—ñ–ª–µ–Ω–Ω—è: –ù–∞–ø–∏—à—ñ—Ç—å —Ñ—É–Ω–∫—Ü—ñ—é calculateRemainder, —è–∫–∞ –ø—Ä–∏–π–º–∞—î –¥–≤–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ - —á–∏—Å–ª–∞ a —Ç–∞ b. –§—É–Ω–∫—Ü—ñ—è –ø–æ–≤–∏–Ω–Ω–∞ –ø–æ–≤–µ—Ä—Ç–∞—Ç–∏ –∑–∞–ª–∏—à–æ–∫ –≤—ñ–¥ –¥—ñ–ª–µ–Ω–Ω—è —á–∏—Å–ª–∞ a –Ω–∞ b. */

// ============================
/* 
–ó–∞–¥–∞—á–∞ –Ω–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫—É –Ω–∞ –ø–∞–ª—ñ–Ω–¥—Ä–æ–º: –ù–∞–ø–∏—à—ñ—Ç—å —Ñ—É–Ω–∫—Ü—ñ—é isPalindrome, —è–∫–∞ –ø—Ä–∏–π–º–∞—î —Ä—è–¥–æ–∫ —ñ –ø–æ–≤–µ—Ä—Ç–∞—î true, —è–∫—â–æ –≤—ñ–Ω —î –ø–∞–ª—ñ–Ω–¥—Ä–æ–º–æ–º (—á–∏—Ç–∞—î—Ç—å—Å—è –æ–¥–Ω–∞–∫–æ–≤–æ –∑–∑–∞–¥—É –Ω–∞–ø–µ—Ä–µ–¥), —Ç–∞ false –≤ —ñ–Ω—à–æ–º—É –≤–∏–ø–∞–¥–∫—É.
 */

function isPalindrome(str) {
  const str2 = str.split("").reverse().join("");
  return str === str2;
}
// isPalindrome("—à–∞–ª–∞—à");

// ============================

/* –ó–∞–¥–∞—á–∞ –Ω–∞ –∑–Ω–∞—Ö–æ–¥–∂–µ–Ω–Ω—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ —á–∏—Å–ª–∞ –≤ –º–∞—Å–∏–≤—ñ: –ù–∞–ø–∏—à—ñ—Ç—å —Ñ—É–Ω–∫—Ü—ñ—é findMaxNumber, —è–∫–∞ –ø—Ä–∏–π–º–∞—î –º–∞—Å–∏–≤ —á–∏—Å–µ–ª —ñ –ø–æ–≤–µ—Ä—Ç–∞—î –Ω–∞–π–±—ñ–ª—å—à–µ —á–∏—Å–ª–æ –≤ —Ü—å–æ–º—É –º–∞—Å–∏–≤—ñ. */
// ============================

/* –ó–∞–¥–∞—á–∞ –Ω–∞ –∑–Ω–∞—Ö–æ–¥–∂–µ–Ω–Ω—è –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –¥–æ–¥–∞—Ç–Ω–∏—Ö —á–∏—Å–µ–ª –≤ –º–∞—Å–∏–≤—ñ: –ù–∞–ø–∏—à—ñ—Ç—å —Ñ—É–Ω–∫—Ü—ñ—é countPositiveNumbers, —è–∫–∞ –ø—Ä–∏–π–º–∞—î –º–∞—Å–∏–≤ —á–∏—Å–µ–ª —ñ –ø–æ–≤–µ—Ä—Ç–∞—î –∫—ñ–ª—å–∫—ñ—Å—Ç—å –¥–æ–¥–∞—Ç–Ω–∏—Ö —á–∏—Å–µ–ª –≤ —Ü—å–æ–º—É –º–∞—Å–∏–≤—ñ. */

// ============================

function slug(str) {
  // return str.replaceAll(" ", "_");
  str = str.split("");
  for (let i = 0; i < str.length; i += 1) {
    if (str[i] === " ") {
      str[i] = "_";
    }
  }

  str.join("");
}

const result = slug("awdawd awdawd awdawd awdaw awd");

console.log(result);
