const startBtn = document.querySelector("button[data-action-start]");
const stopBtn = document.querySelector("button[data-action-stop]");
const clockface = document.querySelector(".js-clockface");

class Timer {
  constructor({ onTick }) {
    this.intervalId = null;
    this.isActive = false;
    this.onTick = onTick;

    this.init();
  }

  init() {
    const time = this.getTimeComponents(0);
    this.onTick(time);
  }

  start() {
    if (this.isActive) {
      return;
    }

    const startTime = Date.now();
    this.isActive = true;

    this.intervalId = setInterval(() => {
      const currentTime = Date.now();
      const deltaTime = currentTime - startTime;
      const time = this.getTimeComponents(deltaTime);

      this.onTick(time);
    }, 1000);
  }

  stop() {
    clearInterval(this.intervalId);
    this.isActive = false;
    const time = this.getTimeComponents(0);
    this.onTick(time);
  }

  /*
   * - –ü—Ä–∏–π–º–∞—î —á–∞—Å –≤ –º—ñ–ª—ñ—Å–µ–∫—É–Ω–¥–∞—Ö
   * - –í–∏—Ä–∞—Ö–æ–≤—É—î —Å–∫—ñ–ª—å–∫–∏ –≤ –Ω–∏—Ö –≤–º—ñ—â–∞—î—Ç—å—Å—è –≥–æ–¥–∏–Ω/—Ö–≤–∏–ª–∏–Ω/—Å–µ–∫—É–Ω–¥
   * - –ü–æ–≤–µ—Ä—Ç–∞—î –æ–±'—î–∫—Ç –∑ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—è–º–∏ hours, mins, secs
   * - –ê–¥—Å—å–∫–∞ –∫–æ–ø—ñ–ø–∞—Å—Ç–∞ –∑ stackoverflow üí©
   */
  getTimeComponents(time) {
    const hours = this.pad(
      Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60))
    );
    const mins = this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));
    const secs = this.pad(Math.floor((time % (1000 * 60)) / 1000));

    return { hours, mins, secs };
  }

  /*
   * –ü—Ä–∏–π–º–∞—î —á–∏—Å–ª–æ, –ø–µ—Ä–µ—Ç–≤–æ—Ä—é—î –π–æ–≥–æ –≤ —Ä—è–¥–æ–∫ —ñ –¥–æ–¥–∞—î –≤ –ø–æ—á–∞—Ç–æ–∫ 0, —è–∫—â–æ —á–∏—Å–ª–æ –º–µ–Ω—à–µ 2-—Ö –∑–Ω–∞–∫—ñ–≤
   */
  pad(value) {
    return String(value).padStart(2, "0");
  }
}

const timer = new Timer({
  onTick: updateClockface,
});

startBtn.addEventListener("click", timer.start.bind(timer));
stopBtn.addEventListener("click", timer.stop.bind(timer));

/*
 * - –ü—Ä–∏–π–º–∞—î —á–∞—Å –≤ –º—ñ–ª—ñ—Å–µ–∫—É–Ω–¥–∞—Ö
 * - –í–∏—Ä–∞—Ö–æ–≤—É—î —Å–∫—ñ–ª—å–∫–∏ –≤ –Ω–∏—Ö –≤–º—ñ—â–∞—î—Ç—å—Å—è –≥–æ–¥–∏–Ω/—Ö–≤–∏–ª–∏–Ω/—Å–µ–∫—É–Ω–¥
 * - –†–∏—Å—É—î —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å
 */
function updateClockface({ hours, mins, secs }) {
  clockface.textContent = `${hours}:${mins}:${secs}`;
}
